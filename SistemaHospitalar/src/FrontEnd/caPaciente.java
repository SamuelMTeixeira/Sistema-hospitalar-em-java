/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BackEnd.ConexaoSQL;
import BackEnd.sql_padroes;
import Padroes.FormatacaoDeCampos;
import Padroes.Validacoes;
import Padroes.Mensagens_Prontas;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author samuel
 */
public class caPaciente extends javax.swing.JFrame {

    private ConexaoSQL         conexao;
    private Mensagens_Prontas  msg;
    private FormatacaoDeCampos formatar; 
    private JTable             grdLista;
    private sql_padroes        db;

    public caPaciente(JTable grd) {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        
        conexao = new ConexaoSQL();
        db = new sql_padroes();
        msg = new Mensagens_Prontas();
        formatar = new FormatacaoDeCampos();
        this.grdLista = grd; 
        

        mbMenu.setBackground(new java.awt.Color(65,105,225));
        
        cbCidade.removeAllItems();
        cbCidade.removeAllItems();
        cbBairro.removeAllItems();
        
        db.setPreencherComboBox(cbEstado, "estado");
        txtTituloAcao.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipal = new javax.swing.JPanel();
        pnlMenuLateral = new javax.swing.JPanel();
        iconeCruz = new javax.swing.JLabel();
        txtNomeHospital = new javax.swing.JLabel();
        pnlMenu1 = new javax.swing.JPanel();
        txtIncluirPaciente = new javax.swing.JLabel();
        pnlMenu2 = new javax.swing.JPanel();
        txtAlterarPaciente = new javax.swing.JLabel();
        pnlMenu3 = new javax.swing.JPanel();
        txtExcluirPaciente = new javax.swing.JLabel();
        txtTituloAcao = new javax.swing.JLabel();
        sep1 = new javax.swing.JSeparator();
        sep2 = new javax.swing.JSeparator();
        tfNome = new javax.swing.JTextField();
        tfCPF = new javax.swing.JTextField();
        tfLogradouro = new javax.swing.JTextField();
        cbEstado = new javax.swing.JComboBox<>();
        cbBairro = new javax.swing.JComboBox<>();
        cbCidade = new javax.swing.JComboBox<>();
        tfContato = new javax.swing.JTextField();
        tfNum = new javax.swing.JTextField();
        tfComplemento = new javax.swing.JTextField();
        txtEstado = new javax.swing.JLabel();
        txtCidade = new javax.swing.JLabel();
        txtBairro = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        mbMenu = new javax.swing.JMenuBar();
        mnTelaInicial = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema Hospitalar");

        pnlPrincipal.setBackground(new java.awt.Color(164, 211, 238));

        pnlMenuLateral.setBackground(new java.awt.Color(65, 105, 225));
        pnlMenuLateral.setForeground(new java.awt.Color(65, 105, 225));

        iconeCruz.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        iconeCruz.setForeground(new java.awt.Color(255, 0, 0));
        iconeCruz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconeCruz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cruz.png"))); // NOI18N

        txtNomeHospital.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNomeHospital.setForeground(new java.awt.Color(255, 255, 255));
        txtNomeHospital.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNomeHospital.setText("HOSPITAL DE TEÓFILO OTONI");

        pnlMenu1.setBackground(new java.awt.Color(72, 118, 255));
        pnlMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenu1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenu1MouseExited(evt);
            }
        });

        txtIncluirPaciente.setBackground(new java.awt.Color(135, 206, 235));
        txtIncluirPaciente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtIncluirPaciente.setForeground(new java.awt.Color(255, 255, 102));
        txtIncluirPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/addUser.png"))); // NOI18N
        txtIncluirPaciente.setText("FINALIZAR CADASTRO DO PACIENTE");

        javax.swing.GroupLayout pnlMenu1Layout = new javax.swing.GroupLayout(pnlMenu1);
        pnlMenu1.setLayout(pnlMenu1Layout);
        pnlMenu1Layout.setHorizontalGroup(
            pnlMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenu1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtIncluirPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMenu1Layout.setVerticalGroup(
            pnlMenu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenu1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtIncluirPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu2.setBackground(new java.awt.Color(72, 118, 255));
        pnlMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenu2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenu2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenu2MouseExited(evt);
            }
        });

        txtAlterarPaciente.setBackground(new java.awt.Color(135, 206, 235));
        txtAlterarPaciente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtAlterarPaciente.setForeground(new java.awt.Color(255, 255, 255));
        txtAlterarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/alterUser.png"))); // NOI18N
        txtAlterarPaciente.setText("ALTERAR DADOS DE ALGUM PACIENTE");

        javax.swing.GroupLayout pnlMenu2Layout = new javax.swing.GroupLayout(pnlMenu2);
        pnlMenu2.setLayout(pnlMenu2Layout);
        pnlMenu2Layout.setHorizontalGroup(
            pnlMenu2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenu2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAlterarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMenu2Layout.setVerticalGroup(
            pnlMenu2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenu2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAlterarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMenu3.setBackground(new java.awt.Color(72, 118, 255));
        pnlMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenu3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenu3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenu3MouseExited(evt);
            }
        });

        txtExcluirPaciente.setBackground(new java.awt.Color(135, 206, 235));
        txtExcluirPaciente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtExcluirPaciente.setForeground(new java.awt.Color(255, 255, 255));
        txtExcluirPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/dropUser.png"))); // NOI18N
        txtExcluirPaciente.setText("EXCLUIR ALGUM PACIENTE");

        javax.swing.GroupLayout pnlMenu3Layout = new javax.swing.GroupLayout(pnlMenu3);
        pnlMenu3.setLayout(pnlMenu3Layout);
        pnlMenu3Layout.setHorizontalGroup(
            pnlMenu3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenu3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtExcluirPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMenu3Layout.setVerticalGroup(
            pnlMenu3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenu3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtExcluirPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlMenuLateralLayout = new javax.swing.GroupLayout(pnlMenuLateral);
        pnlMenuLateral.setLayout(pnlMenuLateralLayout);
        pnlMenuLateralLayout.setHorizontalGroup(
            pnlMenuLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLateralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMenu1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iconeCruz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMenuLateralLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtNomeHospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlMenu2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlMenu3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMenuLateralLayout.setVerticalGroup(
            pnlMenuLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLateralLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(iconeCruz)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeHospital)
                .addGap(50, 50, 50)
                .addComponent(pnlMenu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMenu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMenu3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(238, Short.MAX_VALUE))
        );

        txtTituloAcao.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtTituloAcao.setForeground(new java.awt.Color(205, 0, 0));
        txtTituloAcao.setText("DADOS DO PACIENTE");

        sep1.setBackground(new java.awt.Color(255, 255, 255));

        tfNome.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfNome.setForeground(new java.awt.Color(153, 153, 153));
        tfNome.setText("Informe o nome do paciente...");
        tfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNomeFocusLost(evt);
            }
        });

        tfCPF.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfCPF.setForeground(new java.awt.Color(153, 153, 153));
        tfCPF.setText("Informe o CPF do paciente...");
        tfCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfCPFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfCPFFocusLost(evt);
            }
        });

        tfLogradouro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfLogradouro.setForeground(new java.awt.Color(153, 153, 153));
        tfLogradouro.setText("Informe o nome da rua...");
        tfLogradouro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfLogradouroFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfLogradouroFocusLost(evt);
            }
        });

        cbEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbEstadoItemStateChanged(evt);
            }
        });

        cbCidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCidadeItemStateChanged(evt);
            }
        });

        tfContato.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tfContato.setForeground(new java.awt.Color(153, 153, 153));
        tfContato.setText("Informe o número de contato...");
        tfContato.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfContatoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfContatoFocusLost(evt);
            }
        });

        tfNum.setForeground(new java.awt.Color(153, 153, 153));
        tfNum.setText("Nº");
        tfNum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNumFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNumFocusLost(evt);
            }
        });

        tfComplemento.setForeground(new java.awt.Color(153, 153, 153));
        tfComplemento.setText("Complemento");
        tfComplemento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfComplementoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfComplementoFocusLost(evt);
            }
        });

        txtEstado.setText("Estado:");

        txtCidade.setText("Cidade:");

        txtBairro.setText("Bairro:");

        tfEmail.setForeground(new java.awt.Color(153, 153, 153));
        tfEmail.setText("Informe o email de contato...");
        tfEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfEmailFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addComponent(pnlMenuLateral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(sep1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTituloAcao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sep2))
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(tfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfNum, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfComplemento, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                    .addComponent(tfNome)
                    .addComponent(tfCPF)
                    .addComponent(tfContato, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbEstado, 0, 250, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbBairro, 0, 250, Short.MAX_VALUE)
                            .addComponent(txtBairro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(tfEmail))
                .addGap(48, 48, 48))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMenuLateral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTituloAcao)
                    .addComponent(sep1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sep2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEstado)
                    .addComponent(txtCidade)
                    .addComponent(txtBairro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mbMenu.setBackground(new java.awt.Color(65, 105, 225));
        mbMenu.setPreferredSize(new java.awt.Dimension(60, 30));

        mnTelaInicial.setText("Ir para o menu principal");
        mnTelaInicial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnTelaInicialMouseClicked(evt);
            }
        });
        mbMenu.add(mnTelaInicial);

        setJMenuBar(mbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pnlMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu1MouseClicked
    boolean isWrong = false;
    Validacoes validar = new Validacoes();
    
    
    /* <<< SE O NOME NÃO FOR INFORMADO EXIBE MENSAGEM DE ERRO >>> */
        if(tfNome.getText().equals("Informe o nome do paciente...")  || tfNome.getText().equals("")) {
            msg.erro("nome do paciente", "O campo não pode ficar vazio", tfNome);
            tfNome.setForeground(Color.black);
            isWrong = true;
        }   
    /* <<< SE O CPF NÃO FOR INFORMADO EXIBE MENSAGEM DE ERRO >>> */
        else if(tfCPF.getText().equals("Informe o CPF do paciente...")  || tfCPF.getText().equals("")) {
            msg.erro("CPF do paciente", "O campo não pode ficar vazio", tfCPF);
            tfCPF.setForeground(Color.black);
            isWrong = true;
        }
    /* <<< SE O CONTATO NÃO FOR INFORMADO EXIBE MENSAGEM DE ERRO >>> */
        else if(tfContato.getText().equals("Informe o número de contato...")  || (tfContato.getText().equals("")) ) {
            msg.erro("contato do paciente", "O campo não pode ficar vazio", tfContato );
            tfContato.setForeground(Color.black);
            isWrong = true;
        }  
    /* <<< SE A RUA NÃO FOR INFORMADA EXIBE MENSAGEM DE ERRO >>> */
        else if(tfLogradouro.getText().equals("Informe o nome da rua...")  || (tfLogradouro.getText().equals("")) ) {
            msg.erro("rua", "O campo não pode ficar vazio", tfLogradouro );
            tfLogradouro.setForeground(Color.black);
            isWrong = true;
        }        
    /* <<< SE O NÚMERO NÃO FOR INFORMADO EXIBE MENSAGEM DE ERRO >>> */
        else if(tfNum.getText().equals("Nº")  || (tfLogradouro.getText().equals("")) ) {
            msg.erro("número da residência", "O campo não pode ficar vazio", tfNum);
           tfNum.setForeground(Color.black);
            isWrong = true;
        }    
    /* <<< SE O TAMANHO DO CPF FOI INVÁLIDO EXIBE MENSAGEM DE ERRO >>> */  
        else if(  validar.isCPF(tfCPF.getText()) == false  ) {
            msg.erro("número do cpf", "Esse CPF não existe", tfCPF);
            tfCPF.setForeground(Color.black);
            isWrong = true;
        }
        
        else if(cbEstado.getSelectedIndex() == -1) {
            msg.texto("Nenhum estado foi selecionado");
            cbEstado.requestFocus();
            isWrong = true;
        }
        else if(cbCidade.getSelectedIndex() == -1) {
            msg.texto("Nenhuma cidade foi selecionada");
            cbCidade.requestFocus();
            isWrong = true;
        }
        else if(cbBairro.getSelectedIndex() == -1) {
            msg.texto("Nenhum bairro foi selecionado");
            cbBairro.requestFocus();
            isWrong = true;
        }   
        
        // SE O CPF EXISTIR, O SISTEMA VALIDA SE O CPF JÁ FOI USADO
        else if (validar.isCPF(tfCPF.getText())) {
            
            /* TIRA OS TRAÇOS DO NÚMERO DO CPF E SO DEIXA OS NÚMEROS*/
            String CPF = tfCPF.getText();
            CPF = CPF.replace('.',' ');
            CPF = CPF.replace('-',' ');
            CPF = CPF.replaceAll(" ","");
                /* ---------------------- */
                
            if(db.isExists("paciente", "CPF", CPF)) {
                msg.texto("Impossível concluir ação! \nEsse usuário já foi cadastrado no sistema");
                tfCPF.requestFocus();
                isWrong = true;
            }
        }
        
        
        
    /* <<< SE ESTIVER TUDO CERTO REALIZA O CADASTRO >>> */
        if(isWrong == false) {
            // CADASTRA O ENDEREÇO
            String SQL;
            if(tfComplemento.getText().equals("Complemento")) {
                SQL = "INSERT INTO endereco (logradouro, numero, complemento, codBairro) VALUES ('"+tfLogradouro.getText()+"','"+tfNum.getText()+"','','"+db.getCodigo(cbBairro, "codBairro", "bairro")+"')";
            }
            else 
                SQL = "INSERT INTO endereco (logradouro, numero, complemento, codBairro) VALUES ('"+tfLogradouro.getText()+"','"+tfNum.getText()+"','"+tfComplemento.getText()+"','"+db.getCodigo(cbBairro, "codBairro", "bairro")+"')";
            this.conexao.SQLExecute(SQL);


            // PEGA O COD DO NOVO ENDERECO
            String codEndereco = null;
            try {
                this.conexao.setResultSet("SELECT codEndereco FROM endereco ORDER BY codEndereco DESC LIMIT 1");
               if(this.conexao.getResultSet().first() )
                   codEndereco = this.conexao.getResultSet().getString("codEndereco");
            }
            catch (SQLException e){
                JOptionPane.showMessageDialog(this, "erro"); 
            }
            // CADASTRAR O PACIENTE
            SQL = "INSERT INTO paciente (nome, CPF, contato, codEndereco) VALUES ('"+tfNome.getText()+"','"+tfCPF.getText()+"','"+tfContato.getText()+"','"+codEndereco+"')";
            this.conexao.SQLExecute(SQL);

            msg.successfullyRegistered("Cadastro concluído");
            this.dispose();
        }


        
    }//GEN-LAST:event_pnlMenu1MouseClicked

    private void pnlMenu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu1MouseEntered
        pnlMenu1.setBackground(new java.awt.Color(30, 144, 255));
    }//GEN-LAST:event_pnlMenu1MouseEntered

    private void pnlMenu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu1MouseExited
        pnlMenu1.setBackground(new java.awt.Color(72, 118, 255));
    }//GEN-LAST:event_pnlMenu1MouseExited

    private void mnTelaInicialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnTelaInicialMouseClicked
        this.dispose();
    }//GEN-LAST:event_mnTelaInicialMouseClicked

    private void tfNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomeFocusGained
        formatar.TextoComFoco(tfNome, "Informe o nome do paciente...");
    }//GEN-LAST:event_tfNomeFocusGained

    private void tfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomeFocusLost
        formatar.TextoSemFoco(tfNome, "Informe o nome do paciente...");
    }//GEN-LAST:event_tfNomeFocusLost

    private void tfCPFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCPFFocusGained
        formatar.TextoComFoco(tfCPF, "Informe o CPF do paciente...");
    }//GEN-LAST:event_tfCPFFocusGained

    private void tfCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCPFFocusLost
        formatar.TextoSemFoco(tfCPF, "Informe o CPF do paciente...");
    }//GEN-LAST:event_tfCPFFocusLost

    private void tfContatoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfContatoFocusGained
        formatar.TextoComFoco(tfContato, "Informe o número de contato...");
    }//GEN-LAST:event_tfContatoFocusGained

    private void tfContatoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfContatoFocusLost
        formatar.TextoSemFoco(tfContato, "Informe o número de contato...");
    }//GEN-LAST:event_tfContatoFocusLost

    private void tfLogradouroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfLogradouroFocusGained
        formatar.TextoComFoco(tfLogradouro, "Informe o nome da rua...");
    }//GEN-LAST:event_tfLogradouroFocusGained

    private void tfLogradouroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfLogradouroFocusLost
        formatar.TextoSemFoco(tfLogradouro, "Informe o nome da rua...");
    }//GEN-LAST:event_tfLogradouroFocusLost

    private void tfNumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNumFocusGained
        formatar.TextoComFoco(tfNum, "Nº");
    }//GEN-LAST:event_tfNumFocusGained

    private void tfNumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNumFocusLost
        formatar.TextoSemFoco(tfNum, "Nº");
    }//GEN-LAST:event_tfNumFocusLost

    private void tfComplementoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfComplementoFocusGained
        formatar.TextoComFoco(tfComplemento, "Complemento");
    }//GEN-LAST:event_tfComplementoFocusGained

    private void tfComplementoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfComplementoFocusLost
        formatar.TextoSemFoco(tfComplemento, "Complemento");
    }//GEN-LAST:event_tfComplementoFocusLost

    private void pnlMenu2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu2MouseEntered
        pnlMenu2.setBackground(new java.awt.Color(30, 144, 255));
    }//GEN-LAST:event_pnlMenu2MouseEntered

    private void pnlMenu2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu2MouseExited
        pnlMenu2.setBackground(new java.awt.Color(72, 118, 255));
    }//GEN-LAST:event_pnlMenu2MouseExited

    private void pnlMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu2MouseClicked
        alterarPaciente alterPaciente = new alterarPaciente(grdLista);
        this.dispose();
        alterPaciente.setVisible(true);
    }//GEN-LAST:event_pnlMenu2MouseClicked

    private void pnlMenu3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu3MouseEntered
        pnlMenu3.setBackground(new java.awt.Color(30, 144, 255));
    }//GEN-LAST:event_pnlMenu3MouseEntered

    private void pnlMenu3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu3MouseExited
       pnlMenu3.setBackground(new java.awt.Color(72, 118, 255));
    }//GEN-LAST:event_pnlMenu3MouseExited

    private void pnlMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenu3MouseClicked
        this.dispose();
        dropPaciente telaDrop = new dropPaciente(this.grdLista);
        telaDrop.setVisible(true);
    }//GEN-LAST:event_pnlMenu3MouseClicked

    private void cbEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEstadoItemStateChanged
        // O LISTENER FILTRA AS CIDADES DE ACORDO COM O ESTADO SELECIONADO
            //OBS: Esse foi o único método que funcionou
    cbEstado.addItemListener(new ItemListener()
    {
        ConexaoSQL         conexao = new ConexaoSQL();
        public void itemStateChanged(ItemEvent ev) { if(ev.getStateChange() == ItemEvent.SELECTED){     
        try {
             String SQL = "SELECT DISTINCT nome FROM cidade WHERE codEstado = (SELECT codEstado FROM estado WHERE nome = '"+String.valueOf(cbEstado.getSelectedItem())+"') ORDER BY nome";
            this.conexao.setResultSet(SQL);
            cbCidade.removeAllItems();
            if(this.conexao.getResultSet().first() ) {
                do {
                    cbCidade.addItem(this.conexao.getResultSet().getString("nome"));
                }while(this.conexao.getResultSet().next());
            }
          
            cbBairro.removeAllItems();
           cbCidade.setSelectedIndex(-1);
        }
        catch (SQLException e){
            msg.problemMessage("erro", "");
        }
                    
                    
        }}});
       
    }//GEN-LAST:event_cbEstadoItemStateChanged

    private void cbCidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCidadeItemStateChanged
        // O LISTENER FILTRA OS BAIRROS DE ACORDO COM A CIDADE SELECIONADA
        cbCidade.addItemListener(new ItemListener()
    {
        ConexaoSQL         conexao = new ConexaoSQL();
        public void itemStateChanged(ItemEvent ev) { if(ev.getStateChange() == ItemEvent.SELECTED){     
        try {
             String SQL = "SELECT DISTINCT nome FROM bairro WHERE codCidade = (SELECT codCidade FROM cidade WHERE nome = '"+String.valueOf(cbCidade.getSelectedItem())+"') ORDER BY nome";
            this.conexao.setResultSet(SQL);
            cbBairro.removeAllItems();
            if(this.conexao.getResultSet().first() ) {
                do {
                    cbBairro.addItem(this.conexao.getResultSet().getString("nome"));
                }while(this.conexao.getResultSet().next());
            }
          
            
           cbBairro.setSelectedIndex(-1);
        }
        catch (SQLException e){
            msg.problemMessage("erro", "");
        }
                    
                    
        }}});
    
    }//GEN-LAST:event_cbCidadeItemStateChanged

    private void tfEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEmailFocusGained
        formatar.TextoComFoco(tfEmail, "Informe o email de contato...");
    }//GEN-LAST:event_tfEmailFocusGained

    private void tfEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEmailFocusLost
        formatar.TextoSemFoco(tfEmail, "Informe o email de contato...");
    }//GEN-LAST:event_tfEmailFocusLost



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbBairro;
    private javax.swing.JComboBox<String> cbCidade;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JLabel iconeCruz;
    private javax.swing.JMenuBar mbMenu;
    private javax.swing.JMenu mnTelaInicial;
    private javax.swing.JPanel pnlMenu1;
    private javax.swing.JPanel pnlMenu2;
    private javax.swing.JPanel pnlMenu3;
    private javax.swing.JPanel pnlMenuLateral;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JSeparator sep1;
    private javax.swing.JSeparator sep2;
    private javax.swing.JTextField tfCPF;
    private javax.swing.JTextField tfComplemento;
    private javax.swing.JTextField tfContato;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfLogradouro;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfNum;
    private javax.swing.JLabel txtAlterarPaciente;
    private javax.swing.JLabel txtBairro;
    private javax.swing.JLabel txtCidade;
    private javax.swing.JLabel txtEstado;
    private javax.swing.JLabel txtExcluirPaciente;
    private javax.swing.JLabel txtIncluirPaciente;
    private javax.swing.JLabel txtNomeHospital;
    private javax.swing.JLabel txtTituloAcao;
    // End of variables declaration//GEN-END:variables
}
